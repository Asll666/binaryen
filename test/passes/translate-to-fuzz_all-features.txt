(module
 (type $none_=>_none (func))
 (type $f32_=>_none (func (param f32)))
 (type $exnref_=>_none (func (param exnref)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_externref_anyref_anyref_anyref (func (result externref anyref anyref anyref)))
 (type $none_=>_anyref (func (result anyref)))
 (type $i32_=>_none (func (param i32)))
 (type $i64_=>_none (func (param i64)))
 (type $f64_=>_none (func (param f64)))
 (type $f64_i32_i64_f64_v128_=>_none (func (param f64 i32 i64 f64 v128)))
 (type $v128_=>_none (func (param v128)))
 (type $funcref_f32_f64_i64_=>_anyref (func (param funcref f32 f64 i64) (result anyref)))
 (import "fuzzing-support" "log-i32" (func $log-i32 (param i32)))
 (import "fuzzing-support" "log-i64" (func $log-i64 (param i64)))
 (import "fuzzing-support" "log-f32" (func $log-f32 (param f32)))
 (import "fuzzing-support" "log-f64" (func $log-f64 (param f64)))
 (import "fuzzing-support" "log-v128" (func $log-v128 (param v128)))
 (import "fuzzing-support" "log-exnref" (func $log-exnref (param exnref)))
 (memory $0 (shared 1 1))
 (data (i32.const 0) "N\0fN\f5\f9\b1\ff\fa\eb\e5\fe\a7\ec\fb\fc\f4\a6\e4\ea\f0\ae\e3")
 (table $0 2 funcref)
 (elem (i32.const 0) $func_7 $func_10)
 (global $global$5 (mut f32) (f32.const 74))
 (global $global$4 (mut exnref) (ref.null exn))
 (global $global$3 (mut i32) (i32.const 1263230471))
 (global $global$2 (mut i32) (i32.const -131072))
 (global $global$1 (mut (funcref exnref exnref externref anyref f64)) (tuple.make
  (ref.null func)
  (ref.null exn)
  (ref.null exn)
  (ref.null extern)
  (ref.null any)
  (f64.const -2147483649)
 ))
 (global $hangLimit (mut i32) (i32.const 10))
 (event $event$0 (attr 0) (param exnref))
 (event $event$1 (attr 0) (param f32))
 (export "hashMemory" (func $hashMemory))
 (export "memory" (memory $0))
 (export "func_7" (func $func_7))
 (export "func_7_invoker" (func $func_7_invoker))
 (export "func_10_invoker" (func $func_10_invoker))
 (export "func_13" (func $func_13))
 (export "hangLimitInitializer" (func $hangLimitInitializer))
 (func $hashMemory (result i32)
  (local $0 i32)
  (local.set $0
   (i32.const 5381)
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=1
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=2
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=3
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=4
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=5
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=6
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=7
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=8
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=9
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=10
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=11
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=12
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=13
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=14
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (i32.xor
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 5)
     )
     (local.get $0)
    )
    (i32.load8_u offset=15
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $func_7 (result anyref)
  (local $0 i64)
  (local $1 i64)
  (local $2 anyref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null any)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (ref.null any)
 )
 (func $func_7_invoker
  (drop
   (call $func_7)
  )
  (drop
   (call $func_7)
  )
  (call $log-i32
   (call $hashMemory)
  )
  (drop
   (call $func_7)
  )
  (call $log-i32
   (call $hashMemory)
  )
 )
 (func $func_9 (result externref anyref anyref anyref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (tuple.make
      (ref.null extern)
      (ref.null any)
      (ref.null any)
      (ref.null any)
     )
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (tuple.make
   (ref.null extern)
   (ref.null any)
   (ref.null any)
   (ref.null any)
  )
 )
 (func $func_10 (param $0 f64) (param $1 i32) (param $2 i64) (param $3 f64) (param $4 v128)
  (local $5 exnref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return)
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (call $log-i32
    (call $hashMemory)
   )
   (call $log-f32
    (i32.load offset=4 align=2
     (i32.and
      (local.tee $1
       (block $label$1
        (call $log-i32
         (block $label$2 (result i32)
          (loop $label$3
           (block
            (if
             (i32.eqz
              (global.get $hangLimit)
             )
             (return)
            )
            (global.set $hangLimit
             (i32.sub
              (global.get $hangLimit)
              (i32.const 1)
             )
            )
           )
           (block
            (block $label$4
             (call $log-f32
              (global.get $global$5)
             )
             (if
              (local.tee $1
               (local.get $1)
              )
              (block $label$5
               (call $log-f64
                (f64.reinterpret_i64
                 (local.tee $2
                  (block $label$6
                   (call $log-f32
                    (f32.min
                     (f32.const 0.21899999678134918)
                     (f32.floor
                      (f32.add
                       (f32.const 33554432)
                       (f32.const 44)
                      )
                     )
                    )
                   )
                   (br $label$4)
                  )
                 )
                )
               )
               (loop $label$7
                (block
                 (if
                  (i32.eqz
                   (global.get $hangLimit)
                  )
                  (return)
                 )
                 (global.set $hangLimit
                  (i32.sub
                   (global.get $hangLimit)
                   (i32.const 1)
                  )
                 )
                )
                (block
                 (br_if $label$4
                  (tuple.extract 0
                   (tuple.make
                    (i32.const -262144)
                    (f64.const -nan:0xffffffffffff2)
                    (i64.const 70)
                   )
                  )
                 )
                 (br_if $label$7
                  (local.tee $1
                   (local.tee $1
                    (block $label$8
                     (call $log-i32
                      (call $hashMemory)
                     )
                     (br $label$5)
                    )
                   )
                  )
                 )
                 (f32.store offset=2 align=2
                  (i32.and
                   (global.get $global$2)
                   (i32.const 15)
                  )
                  (global.get $global$5)
                 )
                )
               )
              )
              (call $log-i32
               (call $hashMemory)
              )
             )
            )
            (br_if $label$3
             (i32.eqz
              (local.get $1)
             )
            )
            (call $log-i64
             (loop $label$9
              (block
               (if
                (i32.eqz
                 (global.get $hangLimit)
                )
                (return)
               )
               (global.set $hangLimit
                (i32.sub
                 (global.get $hangLimit)
                 (i32.const 1)
                )
               )
              )
              (block
               (v128.store offset=3
                (i32.and
                 (block $label$10 (result i32)
                  (call $log-i32
                   (call $hashMemory)
                  )
                  (br_if $label$10
                   (call $hashMemory)
                   (if (result i32)
                    (i32.eqz
                     (if
                      (i32.eqz
                       (if (result i32)
                        (i32.eqz
                         (local.tee $1
                          (i32.const 471143707)
                         )
                        )
                        (block $label$11 (result i32)
                         (nop)
                         (br_if $label$10
                          (local.get $1)
                          (i32.eqz
                           (global.get $global$2)
                          )
                         )
                        )
                        (block $label$12 (result i32)
                         (atomic.fence)
                         (i32.load8_s offset=2
                          (i32.atomic.load16_u offset=3
                           (i32.and
                            (local.get $1)
                            (i32.const 15)
                           )
                          )
                         )
                        )
                       )
                      )
                      (block $label$13
                       (call $log-i64
                        (local.tee $2
                         (i64.const -128)
                        )
                       )
                       (br $label$9)
                      )
                      (block $label$14
                       (br $label$9)
                      )
                     )
                    )
                    (block $label$15 (result i32)
                     (call $log-v128
                      (v128.const i32x4 0x22230023 0x00800001 0x0000fffe 0xfff40000)
                     )
                     (i32.div_u
                      (global.get $global$2)
                      (select
                       (block $label$16 (result i32)
                        (local.set $2
                         (local.get $2)
                        )
                        (local.get $1)
                       )
                       (i32.extend16_s
                        (local.get $1)
                       )
                       (local.tee $1
                        (i32.const -93)
                       )
                      )
                     )
                    )
                    (block $label$17 (result i32)
                     (call $log-i32
                      (call $hashMemory)
                     )
                     (i16x8.extract_lane_s 2
                      (v128.const i32x4 0x80000001 0xffffffff 0xfc000000 0xffffffff)
                     )
                    )
                   )
                  )
                 )
                 (i32.const 15)
                )
                (local.get $4)
               )
               (br_if $label$9
                (i32.eqz
                 (local.get $1)
                )
               )
               (select
                (local.tee $2
                 (tuple.extract 4
                  (tuple.make
                   (i32.const 1073741824)
                   (ref.null func)
                   (ref.null any)
                   (ref.null func)
                   (i64.const 131071)
                  )
                 )
                )
                (block $label$20
                 (call $log-exnref
                  (local.get $5)
                 )
                 (br $label$3)
                )
                (br_if $label$2
                 (local.get $1)
                 (block
                  (br_if $label$2
                   (i8x16.extract_lane_s 1
                    (local.tee $4
                     (local.get $4)
                    )
                   )
                   (i32.eqz
                    (block $label$19
                     (call $log-i32
                      (select
                       (i32.const -2147483648)
                       (i32.const -54)
                       (global.get $global$2)
                      )
                     )
                     (br $label$3)
                    )
                   )
                  )
                  (drop
                   (i32.eqz
                    (i32.load offset=2 align=1
                     (i32.and
                      (br_if $label$2
                       (i16x8.extract_lane_s 0
                        (loop $label$18 (result v128)
                         (block
                          (if
                           (i32.eqz
                            (global.get $hangLimit)
                           )
                           (return)
                          )
                          (global.set $hangLimit
                           (i32.sub
                            (global.get $hangLimit)
                            (i32.const 1)
                           )
                          )
                         )
                         (block (result v128)
                          (local.set $1
                           (i32.const 134678029)
                          )
                          (br_if $label$18
                           (i32.const -33)
                          )
                          (local.get $4)
                         )
                        )
                       )
                       (i32.eqz
                        (i32.atomic.load8_u offset=3
                         (i16x8.extract_lane_u 3
                          (v128.const i32x4 0x0036ffaf 0x005ffffc 0x0001ffff 0x0001ffbb)
                         )
                        )
                       )
                      )
                      (i32.const 15)
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
          )
          (return)
         )
        )
        (return)
       )
      )
      (local.get $1)
     )
    )
   )
  )
 )
 (func $func_10_invoker
  (call $func_10
   (f64.const 2.0795737890155117e-18)
   (i32.const 0)
   (i64.const 13)
   (f64.const 1364404325)
   (v128.const i32x4 0x00000000 0x40881000 0x00000000 0x43e00000)
  )
  (call $log-i32
   (call $hashMemory)
  )
 )
 (func $func_12 (result i32)
  (local $0 f64)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (i32.const 128)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0
   (nop)
   (return
    (i32.const 33)
   )
  )
 )
 (func $func_13 (param $0 funcref) (param $1 f32) (param $2 f64) (param $3 i64) (result anyref)
  (local $4 exnref)
  (local $5 externref)
  (local $6 anyref)
  (local $7 funcref)
  (local $8 externref)
  (local $9 funcref)
  (local $10 f32)
  (local $11 i64)
  (local $12 v128)
  (local $13 i64)
  (local $14 i32)
  (local $15 i64)
  (local $16 externref)
  (block
   (if
    (i32.eqz
     (global.get $hangLimit)
    )
    (return
     (ref.null any)
    )
   )
   (global.set $hangLimit
    (i32.sub
     (global.get $hangLimit)
     (i32.const 1)
    )
   )
  )
  (block $label$0 (result anyref)
   (i32.atomic.store16 offset=22
    (i32.and
     (block $label$1
      (call $log-i32
       (call $hashMemory)
      )
      (return
       (ref.null any)
      )
     )
     (i32.const 15)
    )
    (loop $label$2 (result i32)
     (block
      (if
       (i32.eqz
        (global.get $hangLimit)
       )
       (return
        (ref.null any)
       )
      )
      (global.set $hangLimit
       (i32.sub
        (global.get $hangLimit)
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (call $log-i32
       (call $hashMemory)
      )
      (br_if $label$2
       (local.get $14)
      )
      (i32.const 4096)
     )
    )
   )
   (call_indirect (type $none_=>_anyref)
    (i32.const 0)
   )
  )
 )
 (func $hangLimitInitializer
  (global.set $hangLimit
   (i32.const 10)
  )
 )
)
